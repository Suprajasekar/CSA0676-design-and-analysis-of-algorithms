def myAtoi(s):
    INT_MAX = 2**31 - 1
    INT_MIN = -2**31

    i, n = 0, len(s)
    # Ignore leading whitespace
    while i < n and s[i].isspace():
        i += 1

    # Check for the sign
    sign = 1
    if i < n and (s[i] == '+' or s[i] == '-'):
        if s[i] == '-':
            sign = -1
        i += 1

    # Convert digits to integer
    num = 0
    while i < n and s[i].isdigit():
        digit = int(s[i])
        
        # Check for overflow and underflow before it happens
        if num > (INT_MAX - digit) // 10:
            return INT_MAX if sign == 1 else INT_MIN
        
        num = num * 10 + digit
        i += 1

    return sign * num

# Example usage:
print(myAtoi("42"))           # Output: 42
print(myAtoi("   -42"))       # Output: -42
print(myAtoi("4193 with words"))  # Output: 4193
print(myAtoi("words and 987"))    # Output: 0
print(myAtoi("-91283472332"))     # Output: -2147483648 (INT_MIN)
print(myAtoi("91283472332"))      # Output: 2147483647 (INT_MAX)
