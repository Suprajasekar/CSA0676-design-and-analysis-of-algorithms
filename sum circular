def max_subarray_sum_circular(nums):
    def kadane(arr):
        max_ending_here = max_so_far = arr[0]
        for x in arr[1:]:
            max_ending_here = max(x, max_ending_here + x)
            max_so_far = max(max_so_far, max_ending_here)
        return max_so_far

    total_sum = sum(nums)
    max_kadane = kadane(nums)
    max_wraparound = total_sum + kadane([-x for x in nums[1:]]) + kadane([-x for x in nums[:-1]])
    
    return max(max_kadane, max_wraparound) if max_kadane > 0 else max_kadane

# Example usage
nums = [5, -3, 5]
print(max_subarray_sum_circular(nums)) 
