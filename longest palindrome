def longest_palindrome(s):
    if not s or len(s) == 1:
        return s
    
    def expand_around_center(s, left, right):
        while left >= 0 and right < len(s) and s[left] == s[right]:
            left -= 1
            right += 1
        # Return the expanded palindrome
        return s[left + 1:right]
    
    longest = ""
    
    for i in range(len(s)):
        # Odd length palindromes (single character center)
        odd_palindrome = expand_around_center(s, i, i)
        if len(odd_palindrome) > len(longest):
            longest = odd_palindrome
        
        # Even length palindromes (two character center)
        even_palindrome = expand_around_center(s, i, i + 1)
        if len(even_palindrome) > len(longest):
            longest = even_palindrome
    
    return longest

# Example usage:
s = "babad"
print(longest_palindrome(s))  # Output: "bab" or "aba"

s = "cbbd"
print(longest_palindrome(s))  # Output: "bb"
